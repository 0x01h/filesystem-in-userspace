PROJECT DOCUMENTATION

CONTENTS
1- Installation of FUSE
2- Usage of rofs.c
3- Installation of html-tidy
4- Implementation of Mirror Folder
5- Helpers

INSTALLATION OF FUSE
$ sudo apt install libfuse-dev

USAGE OF ROFS.C
1) Compile: "gcc rofs.c -o rofs -Wall -ansi -W -std=c99 -g -ggdb -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -lfuse -ltidy"
2) Mount, Option 1: "./rofs readwrite_filesystem mount_point"
          Option 2: "./rofs test1 test2"
3) Additional commands: "ls -l" and "grep rofs /etc/mtab"
4) To unmount filesystem use "fusermount -u mount_point".

mtab: This file lists all currently mounted filesystems.

INSTALLATION OF HTML-TIDY
1) $ sudo apt install libtidy-dev
2) #include <tidy/tidy.h> #include <tidy/buffio.h>
3) $ gcc tidy.c -ltidy

IMPLEMENTATION OF MIRROR FOLDER
1) Compile rofs.c: "gcc rofs.c -o rofs -Wall -ansi -W -std=c99 -g -ggdb -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -lfuse -ltidy"
2) Manually create a folder that will mirror another folder: you can name it as "mirror".
3) Mount rofs, specialized for the purpose: "./rofs -d website/ mirror/"
This should take half a minute to complete. 
Then you can access the mirrored folder. 
As said above, mirror folder has the same structure, is read only and reflects any changes immediately.

HELPERS
Permission    Action      chmod option
======================================
read          (view)      r or 4
write         (edit)      w or 2
execute       (execute)   x or 1

User    ls output
==================
owner   -rwx------
group   ----rwx---
other   -------rwx

Symbolic Notation    Octal Notation    English
============================================================
----------            0000               no permissions
---x--x--x            0111               execute
--w--w--w-            0222               write
--wx-wx-wx            0333               write & execute
-r--r--r--            0444               read
-r-xr-xr-x            0555               read & execute
-rw-rw-rw-            0666               read & write
-rwxrwxrwx            0777               read. write & execute

Links in Linux/Unix
Link are of two types: soft links (symbolic links) or hard links.

Soft Links (symbolic links)
You can make links to files and directories, and you can create links (shortcuts) on different partition and with a different inode number from original.
If the real copy is deleted, the link will not work.

Hard Links
Hard links are for files only; you cannot link to a file on different partition with a different inode number.
If the real copy is deleted the link will work, because it accesses the underlying data the real copy was accessing.
